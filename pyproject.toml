[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "deczoo"
version = "0.6.0"
description = "Zoo for Python decorators"

license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.8"
authors = [{name = "Francesco Bruzzesi"}]

dependencies = [
    "typing-extensions>=4.4.0; python_version < '3.12'",
]

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License"
]

[project.urls]
documentation = "https://fbruzzesi.github.io/deczoo/"
repository = "https://github.com/fbruzzesi/deczoo"
issue-tracker = "https://github.com/fbruzzesi/deczoo/issues"


[project.optional-dependencies]
chime = ["chime"]
rich = ["rich>=12.0.0"]

dev = [
    "pre-commit>=2.21.0",
    "hatch"
]

lint = [
    "ruff>=0.1.6"
]

test = [
    "interrogate>=1.5.0",
    "pytest>=7.2.0",
    "pytest-xdist>=3.2.1",
    "coverage>=7.2.1",
    "coverage-badge>=1.1.0",
    "numpy",
]

docs = [
    "mkdocs>=1.4.2",
    "mkdocs-material>=9.1.2",
    "mkdocstrings[python]>=0.20.0",
]

all = ["deczoo[chime,rich]"]
all-dev = ["deczoo[chime,rich,dev,lint,test,docs]"]

[tool.setuptools.packages.find]
include = ["deczoo*"]
exclude = [
    "data",
    "docs",
    "docker",
    "kubernetes",
    "notebooks",
    "results",
    "tests",
]

[tool.setuptools.package-data]
deczoo = ["py.typed"]

[tool.ruff]
line-length = 120
extend-select = ["I"]
ignore = [
    "E731",  # do not assign a `lambda` expression, use a `def`
    ]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.interrogate]
ignore-nested-functions = true
ignore-module = true
ignore-init-method = true
ignore-private = true
ignore-magic = true
ignore-property-decorators = true
fail-under = 95
verbose = 2 # 0 (minimal output), 1 (-v), 2 (-vv)

[tool.mypy]
ignore_missing_imports = true

[tool.coverage.run]
source = ["deczoo/"]
